package com.bridgelabz.dataStructures;

import com.bridgelabz.utility.Utility;

public class BankingCounter {
	static Node head;

	static class Node {
		double data;
		Node next;
	}

	public static void main(String[] args) {

		System.out.println("Welcome to Bank of hell");
		System.out.println("press 1 to deposit and 2 to withdraw");
		int choice = Utility.readInteger();
		System.out.println("Enter the amount to deposit or withdraw");
		double amount = Utility.readDouble();
		

		double totalBalance = 0;
		if (choice == 1) {
			enQueue(amount);
			display();

			System.out.println("The balance amount in acc is " + totalBalance);

		} else {

			dequeue();
			display();
			totalBalance = balance();
			System.out.println("The balance amount after dequeue is " + totalBalance);

		}
		
	}

	public static Node generateTailPointer() {
		Node tail;
		if (head == null)

		{
			tail = head;
		}

		else {
			Node n = head;
			while (n.next != null) {
				n = n.next;
			}
			tail = n;

		}
		return tail;
	}

	public static void enQueue(double amount) {
		Node node = new Node();
		node.data = amount;
		node.next = null;
		if (head == null) {
			head = node;
		} else {
			Node rear = generateTailPointer();
			rear.next = node;
			rear = node;
		}

	}

	public static void deQueue() {
		head = head.next;

	}

	public static void dequeue() {
		head = head.next;

	}

	public static void display() {
		Node n = head;
		if (head == null) {
			System.out.println("empty");
		} else {
			while (n.next != null) {
				System.out.println(n.data);
				n = n.next;
			}
			System.out.println(n.data);
		}

	}

	public static double balance() {
		double balance = 0.0;
		if (head == null) {
			balance = 0;
		} else {
			Node n = head;

			while (n.next != null) {

				balance = balance + (double) n.data;
				System.out.println(n.data);
				n = n.next;
			}
			balance=balance+n.data;

		}
		return balance;
	}

}
